from aiogram.utils.markdown import hlink

from dto.event import EventDTO
from shared.enums import PaymentStatus, EventStatus
from tgbot.shared.db.api import get_payment_by_user


async def create_event_text(event: EventDTO, state=None, **kwargs) -> str:
    text = ''
    text += f'üèÅ –ù–∞–∑–≤–∞–Ω–∏–µ: {event.name}\n\n'
    text += f'üìù –û–ø–∏—Å–∞–Ω–∏–µ: {event.description if event.description else ""}\n\n'
    text += f'üìÜ –î–∞—Ç–∞: {event.date if event.date else ""}\n\n'
    text += f'üë§Ô∏è –ö–æ–ª-–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {event.max_participants if event.max_participants else 0}\n\n'
    text += f'üë• –ö–æ–ª-–≤–æ –∫–æ–º–∞–Ω–¥: {len(event.teams if event.teams else [])}\n\n'
    if 'status' in state:
        text += 'üü¢ ' if event.status == EventStatus.CONDUCTED \
            else 'üî¥ ' if event.status == EventStatus.CANCELED \
            else 'üü† ' if event.status == EventStatus.PAYMENT_WAIT \
            else 'üîµ '
        text += f'–°—Ç–∞—Ç—É—Å: {event.status.value}\n\n'
    text += f'üí∞ –°—É–º–º–∞: {event.amount if event.amount else 0} —Ç–≥.\n\n'

    text += '--------------------\n\n'

    if 'name' in state:
        text += "‚ö†Ô∏è –í–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"
    if 'description' in state:
        text += "‚ö†Ô∏è –í–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"
    if 'participants_limit' in state:
        text += "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
    if 'teams_count' in state:
        text += "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª-–≤–æ –∫–æ–º–∞–Ω–¥"
    if 'payment_amount' in state:
        text += "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"
    if 'date' in state:
        text += "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ DD.MM.YYYY HH:mm"
    if 'links' in state:
        text += "üì¨ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏:\n"
        for index, team in enumerate(event.teams):
            text += f"–ö–æ–º–∞–Ω–¥–∞ {index + 1}: üîë{hlink(f'–∫–æ–º–∞–Ω–¥–∞ {index + 1}', f'https://t.me/makeurmatch_bot?start={team.id}')}\n"
        text += "\n"
    if 'show_teams' in state:
        for index, team in enumerate(event.teams):
            text += f"–ö–æ–º–∞–Ω–¥–∞ ‚Ññ{index + 1}:\n"
            if len(team.participants) > 0:
                for idx, player in enumerate(team.participants):
                    text += f"{idx + 1}. {player.full_name} @{player.id}"
                    if event.status == EventStatus.PAYMENT_WAIT:
                        payment = await get_payment_by_user(player.id, event.id)
                        print(payment)
                        if payment is not None and payment.status == PaymentStatus.PAID:
                            text += " (‚úÖ –û–ø–ª–∞—á–µ–Ω–æ)"

                    text += '\n'
            else:
                text += f"üìÇ –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –µ—â—ë –Ω–µ—Ç..."
            text += '\n\n'
    if 'payment' in state:
        if kwargs.get('payment_status') != PaymentStatus.PAID:
            text += f"üíµ –°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: {kwargs.get('payment_amount')} —Ç–≥.\n"
            text += f"üí≥ –í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É:\n{hlink('—Å—Å—ã–ª–∫–∞', kwargs.get('payment_link'))}\n"
        else:
            text += f"üí∞ –°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: {kwargs.get('payment_amount')} —Ç–≥. (‚úÖ –û–ø–ª–∞—á–µ–Ω–æ)\n"
    if 'cancel' in state:
        text += f"üö´ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ\n"
    if 'refund' in state:
        text += f"üí∂ –°—É–º–º–∞ –∫ –≤–æ–∑–≤—Ä–∞—Ç—É: {kwargs.get('payment_amount')} —Ç–≥.\n"
        text += f"‚è∞ –î–µ–Ω—å–≥–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –í–∞–º –≤ —Ç–µ—á–µ–Ω–∏–∏ 3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π\n"
    if 'canceled_by' in state:
        text += f"‚ùóÔ∏è –£—á–∞—Å—Ç–Ω–∏–∫ –æ—Ç–º–µ–Ω–∏–≤—à–∏–π –æ–ø–ª–∞—Ç—É: {kwargs.get('canceled_by')}\n"

    return text
